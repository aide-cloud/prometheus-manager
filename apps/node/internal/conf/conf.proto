syntax = "proto3";
package kratos.api;

option go_package = "prometheus-manager/apps/node/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Trace trace = 4;
  Strategy strategy = 5;
  Env env = 6;
  Registrar registrar = 7;
  Kafka kafka = 9;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

// 链路追踪
message Trace {
  string endpoint = 1;
}

// strategy 策略路径
message Strategy {
  // load频率
  google.protobuf.Duration load_interval = 1;
  // enable reload
  bool enable = 2;
  repeated PromDatasource prom_datasources = 3;
}

message Env {
  string name = 1;
  map<string, string> metadata = 2;
  string version = 3;
  string namespace = 4;
}

message Registrar {
  message Etcd {
    repeated string endpoints = 1;
    // TLS credentials
    string key_file = 2;
    string cert_file = 3;
    string trusted_ca_file = 4;
  }
  Etcd etcd = 1;
}

message PromDatasource {
  string name = 1;
  string type = 2;
  string url = 3;
  string access = 4;
  // reload path
  string reload_path = 5;
  repeated string path = 6;
}

message Kafka {
  repeated string endpoints = 1;
  string alert_topic = 2;
  bool enable = 3;
}
