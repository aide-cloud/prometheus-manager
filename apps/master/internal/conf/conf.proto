syntax = "proto3";
package kratos.api;

option go_package = "prometheus-manager/apps/master/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Trace trace = 4;
  Env env = 5;
  PushStrategy push_strategy = 6;
  Registrar registrar = 7;
  Kafka kafka = 8;
}

message HTTP {
  string network = 1;
  string addr = 2;
  google.protobuf.Duration timeout = 3;
}
message GRPC {
  string network = 1;
  string addr = 2;
  google.protobuf.Duration timeout = 3;
}

message Server {
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
    bool debug = 3;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
    google.protobuf.Duration dial_timeout = 5;
    uint32 db = 6;
    string password = 7;
  }
  Database database = 1;
  Redis redis = 2;
}

// 链路追踪
message Trace {
  string endpoint = 1;
}

message Env {
  string name = 1;
  map<string, string> metadata = 2;
  string version = 3;
  string namespace = 4;
}

message Registrar {
  message Etcd {
    repeated string endpoints = 1;
    // TLS credentials
    string key_file = 2;
    string cert_file = 3;
    string trusted_ca_file = 4;
  }
  Etcd etcd = 1;
}

message PushStrategy {
  google.protobuf.Duration interval = 1; // push 策略的间隔
  string dir = 2; // push 策略的目录
  bool enable = 3; // 是否开启 push 策略
  repeated NodeServer nodes = 8;
}

message NodeServer {
  string server_name = 1;
  google.protobuf.Duration timeout = 2;
  string network = 3;
}

message Kafka {
  repeated string endpoints = 1;
  string alert_topic = 2;
  bool enable = 3;
}
